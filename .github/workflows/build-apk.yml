name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # Omogućava manuelno pokretanje

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install dependencies
      run: npm ci
      
    - name: Build web application
      run: npm run build
      env:
        NODE_ENV: production
        
    - name: Setup Capacitor
      run: |
        npx cap add android --no-open
        npx cap sync android
        
    - name: Build Android APK
      working-directory: android
      run: |
        chmod +x gradlew
        ./gradlew assembleDebug
        
    - name: Sign APK (optional - za release verzije)
      if: github.ref == 'refs/heads/main'
      working-directory: android
      run: |
        # Ovde možete dodati potpisivanje APK-a sa vašim ključem
        echo "APK je uspešno kreiran"
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk-${{ github.run_number }}
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
        
    - name: Create Release (na main branch)
      if: github.ref == 'refs/heads/main'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Servis Todosijević APK v${{ github.run_number }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: android/app/build/outputs/apk/debug/app-debug.apk
        asset_name: ServisTodosijevic-v${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive